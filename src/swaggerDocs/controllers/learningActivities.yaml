/learning-activities:
  post:
    summary: Create a new learning activity.
    tags:
      - Learning Activities
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LearningActivityPartial'
    responses:
      201:
        description: Successful response indicating successful creation of a learning activity.
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: Learning activity created successfully.
                  description: Message indicating successful creation of a learning activity.
                _id:
                  type: string
                  example: 61f1a2b1c2d3e4f5a6b7c8d9
                  description: _id of the newly created learning activity.
      404:
        description: Not found error.
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: Semester not found.
                  description: Error message indicating that the specified semester was not found.
      401:
        $ref: '#/components/responses/UnauthorizedAccess'
      422:
        $ref: '#/components/responses/UnprocessableEntity'
      500:
        $ref: '#/components/responses/InternalServerError'

/learning-activities/{id}:
  get:
    summary: Get a learning activity by id.
    tags:
      - Learning Activities
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: objectId
        description: id of the learning activity.
    responses:
      200:
        description: Successful response.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LearningActivity'
      401:
        $ref: '#/components/responses/UnauthorizedAccess'
      404:
        $ref: '#/components/responses/NotFound'
      422:
        $ref: '#/components/responses/UnprocessableEntity'
      500:
        $ref: '#/components/responses/InternalServerError'

  delete:
    summary: Delete a learning activity.
    tags:
      - Learning Activities
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        description: id of the learning activity.
    responses:
      200:
        description: Successful response indicating successful deletion of the learning activity.
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: Learning activity deleted successfully.
                  description: Message indicating successful deletion of the learning activity.
                _id:
                  type: string
                  example: 61f1a2b1c2d3e4f5a6b7c8d9
                  description: _id of the deleted learning activity.
      401:
        $ref: '#/components/responses/UnauthorizedAccess'
      404:
        $ref: '#/components/responses/NotFound'
      422:
        $ref: '#/components/responses/UnprocessableEntity'
      500:
        $ref: '#/components/responses/InternalServerError'

  put:
    summary: Update a learning activity.
    tags:
      - Learning Activities
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        description: id of the learning activity.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LearningActivityPartial'
    responses:
      200:
        description: Successful response indicating successful update of the learning activity.
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: Learning activity updated successfully.
                  description: Message indicating successful update of the learning activity.
      401:
        $ref: '#/components/responses/UnauthorizedAccess'
      404:
        $ref: '#/components/responses/NotFound'
      422:
        $ref: '#/components/responses/UnprocessableEntity'
      500:
        $ref: '#/components/responses/InternalServerError'

/learning-activities/semesters/{id}:
  get:
    summary: Get all learning activities of a semester.
    tags:
      - Learning Activities
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: objectId
        description: id of the semester.
    responses:
      200:
        description: Successful response.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LearningActivity'
      401:
        $ref: '#/components/responses/UnauthorizedAccess'
      422:
        $ref: '#/components/responses/UnprocessableEntity'
      500:
        $ref: '#/components/responses/InternalServerError'
