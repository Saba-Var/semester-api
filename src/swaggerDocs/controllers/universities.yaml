/universities:
  get:
    summary: Get all universities with pagination.
    tags:
      - Universities
    security:
      - bearerAuth: []
    parameters:
      - in: query
        name: page
        description: Page number
        schema:
          type: number
      - in: query
        name: limit
        description: Number of items per page
        schema:
          type: number
    responses:
      200:
        description: Universities successfully retrieved.
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/University'
                  not:
                    properties:
                      _id:
                        type: string
                paginationInfo:
                  $ref: '#/components/schemas/PaginationInfo'
      401:
        $ref: '#/components/responses/UnauthorizedAccess'
      500:
        $ref: '#/components/responses/InternalServerError'

  post:
    security:
      - bearerAuth: []
    tags:
      - Universities (Admin)
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/University'
    description: Create a new university.
    responses:
      201:
        description: User details successfully retrieved.
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: University created successfully!
                _id:
                  type: string
                  example: 5f9b3b3b1c9d440000f3e9a0
                  format: objectid
      401:
        $ref: '#/components/responses/UnauthorizedAccess'
      409:
        description: University with the same name already exists.
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: University with this name already exists!
      500:
        $ref: '#/components/responses/InternalServerError'

/universities/{id}:
  get:
    summary: Get university by id.
    tags:
      - Universities
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        description: University id
        schema:
          type: string
          format: objectid
    responses:
      200:
        description: University successfully retrieved.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/University'
      404:
        $ref: '#/components/responses/NotFound'
      500:
        $ref: '#/components/responses/InternalServerError'

/universities/{id}/rate:
  put:
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        description: University id
        schema:
          type: string
          format: objectid
    tags:
      - Universities
    description: Rate a university.
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Criterias'
    responses:
      200:
        description: University rated successfully.
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: University rated successfully!
                _id:
                  type: string
                  example: 5f9b3b3b1c9d440000f3e9a0
                  format: objectid
      401:
        $ref: '#/components/responses/UnauthorizedAccess'
      404:
        $ref: '#/components/responses/NotFound'
      500:
        $ref: '#/components/responses/InternalServerError'
